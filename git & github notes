source: wwww.liaoxuefeng.com

git init
# write files
git add <file1>
git add <file2>
git commit -m "<message>"

git log
git reflog
git reset --hard <version number>

# change file
git add <file>
# change file again
git add <file> # agian!
git commit -m "<message>"

# discard changes
git reset HEAD <file> # discard changes added to stage before commit
git checkout --<file>
# go back to last git commit / git add for this file, cleanup working directory

# how to combine git with github
git remote add origin https://github.com/luohongchen1993/MyWeb.git
git push -u origin master
  later we can do:
    # change file
    git add -> git commit
    git push origin master
    git push origin dev
  to change the remote repo

# Branching
git checkout -b dev
==
git branch dev
git checkout dev

git branch # see what are the branches

# no fast forward merge, can see changes along the way
git merge --no-ff -m <message> <branchname>

git stash # save something you don't wanna commit yet

git branch -D <feature-branch> # force delete branch

# teamwork
git remote -v # check remote warehouse
git push origin branch-name
  # if this fails
    git pull 
      # if this also fails
        git checkout -b branch-name origin/branch-name # create the same branch
        git branch --set-upstream <branch-name> origin/<branch-name> # connect local and remote branches
    git pull
    # solve conflicts locally and then push
        

# tag

# config

# .gitignore
